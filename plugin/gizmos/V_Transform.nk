set cut_paste_input [stack 0]
version 12.2 v3
push $cut_paste_input
Group {
 name V_Transform1
 tile_color 0xc17939ff
 selected true
 xpos 645
 ypos -319
 addUserKnob {20 VoxelTransform}
 addUserKnob {4 transform_type l Transform t "Apply the transformation to the data within the grid, or to move the grid itself." M {Grid Data ""}}
 addUserKnob {41 translate T LOCAL_TRANSFORM.translate}
 addUserKnob {41 rotate T LOCAL_TRANSFORM.rotate}
 addUserKnob {41 scaling l scale T LOCAL_TRANSFORM.scaling}
 addUserKnob {41 uniform_scale l "uniform scale" T LOCAL_TRANSFORM.uniform_scale}
 addUserKnob {41 skew T LOCAL_TRANSFORM.skew}
 addUserKnob {41 pivot T LOCAL_TRANSFORM.pivot}
 addUserKnob {20 graphics l GPU}
 addUserKnob {41 "Local GPU: " T BlinkScript2.gpuName}
 addUserKnob {41 "Use GPU if Available" T BlinkScript2.useGPUIfAvailable}
 addUserKnob {41 maxGPUMemory l "Percentage of GPU memory to use" T BlinkScript2.maxGPUMemory}
 addUserKnob {41 maxTileLines l "Percentage of image height per tile" T BlinkScript2.maxTileLines}
}
 Input {
  inputs 0
  name Input
  xpos 440
  ypos -61
 }
 Dot {
  name Dot1
  note_font_size 20
  xpos 474
  ypos 5
 }
set N34ebd600 [stack 0]
 Dot {
  name Dot3
  note_font_size 20
  xpos 287
  ypos 5
 }
set N34ebcf00 [stack 0]
 Dot {
  name Dot4
  note_font_size 20
  xpos 287
  ypos 230
 }
push $N34ebcf00
 Dot {
  name Dot2
  note_font_size 20
  xpos 158
  ypos 5
 }
add_layer {voxels voxels.x voxels.y voxels.z voxels.density}
 Shuffle {
  in voxels
  name Shuffle1
  label "<font size = \"5\"> \[value in]"
  xpos 124
  ypos 65
  postage_stamp true
 }
 BlinkScript {
  inputs 2
  recompileCount 2
  ProgramGroup 1
  KernelDescription "2 \"VTransformData\" iterate pixelWise 0f68264e42208fc2d0fa5a6cc657585f70bfe7ecdb5fe27909ede629bf43dda1 3 \"positions\" Read Point \"voxels\" Read Random \"dst\" Write Point 4 \"bbox_min\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"bbox_max\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"resolution\" Int 3 AAAAAAAAAAAAAAAAAAAAAA== \"transform_M\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== 4 \"bbox_min\" 3 1 \"bbox_max\" 3 1 \"resolution\" 3 1 \"transform_M\" 16 1 3 \"VoxelSizeInv\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA== \"grid_width\" Int 1 1 AAAAAA== \"transform_M_Inv\" Float 16 1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "kernel VTransformData : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead> positions;\n  Image<eRead, eAccessRandom> voxels;\n  Image<eWrite> dst;\n\n  param:\n    float3 bbox_min;\n    float3 bbox_max;\n    int3 resolution;\n    float4x4 transform_M;\n\n  local:\n    float3 VoxelSizeInv;\n    int grid_width;\n    float4x4 transform_M_Inv;\n\n  void init()\n  \{\n    for (int c = 0; c < 3; c++)\n      VoxelSizeInv\[c] = resolution\[c] / (bbox_max\[c] - bbox_min\[c]);\n    grid_width = voxels.bounds.width();\n    transform_M_Inv = transform_M.invert();\n    // To transform in world space, invert the world_matrix, and multiply ... after?\n    // transform_M_Inv * world_M_Inv;\n  \}\n  \n  float3 multVectMatrix(float4 vec, float4x4 M)\n  \{\n    float3 out = float3(\n      vec.x * M\[0]\[0] + vec.y * M\[0]\[1] + vec.z * M\[0]\[2] + M\[0]\[3],\n      vec.x * M\[1]\[0] + vec.y * M\[1]\[1] + vec.z * M\[1]\[2] + M\[1]\[3],\n      vec.x * M\[2]\[0] + vec.y * M\[2]\[1] + vec.z * M\[2]\[2] + M\[2]\[3]\n    );\n\n    return out;\n  \}\n\n  float4 voxelValue(int3 voxel)\n  \{\n    // Return Empty for values outside of grid\n    if (voxel.x < 0 || resolution.x <= voxel.x ||\n        voxel.y < 0 || resolution.y <= voxel.y ||\n        voxel.z < 0 || resolution.z <= voxel.z )\n      return 0;\n\n    int id = (voxel.y * resolution.x + voxel.x) * resolution.z + voxel.z;\n    int x = id % grid_width;\n    int y = id / grid_width;\n    return voxels(x, y);\n  \}\n\n  float4 Blend(float3 curpos)\n  \{\n    float3 weight, voxel_space;\n    int3 base_voxel, offset;\n    // Lower Bound of 8 adjacent voxels\n    for (int c = 0; c < 3; c++)\n    \{\n      voxel_space\[c] = curpos\[c] * VoxelSizeInv\[c];\n      base_voxel\[c] = int(floor(voxel_space\[c] - 0.5f));\n    \}\n\n    float4 result = 0;\n    for (int i = 0; i < 8; i++)\n    \{\n      // Weighted distance on each axis for each adjacent voxel\n      offset = int3(i / 4, (i / 2) % 2, i % 2);\n      weight.x = 1 - fabs(offset.x - (voxel_space.x - (base_voxel.x + 0.5f)));\n      weight.y = 1 - fabs(offset.y - (voxel_space.y - (base_voxel.y + 0.5f)));\n      weight.z = 1 - fabs(offset.z - (voxel_space.z - (base_voxel.z + 0.5f)));\n\n      result += voxelValue(base_voxel + offset) * weight.x * weight.y * weight.z;\n    \}\n\n    return result;\n  \}\n\n  void process()\n  \{\n    float4 position = positions();\n    float3 target = multVectMatrix(position, transform_M_Inv);\n    dst() = Blend(target - bbox_min);\n  \} \n\};"
  rebuild ""
  rebuild_finalise ""
  VTransformData_bbox_min {{"\[lindex \[metadata bbox] 0]"} {"\[lindex \[metadata bbox] 1]"} {"\[lindex \[metadata bbox] 2]"}}
  VTransformData_bbox_max {{"\[lindex \[metadata bbox] 3]"} {"\[lindex \[metadata bbox] 4]"} {"\[lindex \[metadata bbox] 5]"}}
  VTransformData_resolution {{"\[lindex \[metadata resolution] 0]"} {"\[lindex \[metadata resolution] 1]"} {"\[lindex \[metadata resolution] 2]"}}
  VTransformData_transform_M {
      {{LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix}}
      {{LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix}}
      {{LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix}}
      {{LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix} {LOCAL_TRANSFORM.matrix}}
    }
  name BlinkScript2
  selected true
  xpos 124
  ypos 220
 }
 Dot {
  name Dot5
  note_font_size 20
  xpos 158
  ypos 315
 }
push $N34ebd600
 NoOp {
  name METADATA_READ
  xpos 440
  ypos 82
  addUserKnob {20 User}
  addUserKnob {1 matrix}
  matrix "\[metadata vTransformMatrix frame]"
 }
 ModifyMetaData {
  metadata {
   {set vTransformMatrix "\[value LOCAL_TRANSFORM.world_matrix]"}
  }
  name ModifyMetaData2
  xpos 440
  ypos 226
 }
 Switch {
  inputs 2
  which {{transform_type}}
  name Switch1
  xpos 440
  ypos 311
 }
 Output {
  name Output2
  xpos 440
  ypos 393
 }
 Axis2 {
  inputs 0
  display off
  selectable false
  useMatrix true
  matrix {
      {{"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 0] 0]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 0] 1]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 0] 2]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 0] 3]"}}
      {{"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 1] 0]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 1] 1]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 1] 2]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 1] 3]"}}
      {{"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 2] 0]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 2] 1]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 2] 2]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 2] 3]"}}
      {{"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 3] 0]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 3] 1]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 3] 2]"} {"\[lindex \[lindex \[python \{nuke.toNode('METADATA_READ')\['matrix'].value()\}] 3] 3]"}}
    }
  name WORLD_TRANSFORM
  xpos 591
  ypos 63
  addUserKnob {20 "Ppos Locator"}
  addUserKnob {18 pointPosition l "Point Position"}
  pointPosition {0 0 0}
  addUserKnob {6 pointPosition_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Axis2 {
  name LOCAL_TRANSFORM
  xpos 591
  ypos 205
  addUserKnob {20 "Ppos Locator"}
  addUserKnob {18 pointPosition l "Point Position"}
  pointPosition {0 0 0}
  addUserKnob {6 pointPosition_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
end_group
